<?php

$meyveler = ["elma", "armut", "muz", "Ã§ilek"];

echo $meyveler[0];
echo $meyveler[1];
echo $meyveler[2];
echo $meyveler[3];

echo "<hr>";
for ($i = 0; $i <= 3; $i++) {
    // BurasÄ± i deÄŸiÅŸkeni 3'e eÅŸit veya kÃ¼Ã§Ã¼k olduÄŸu sÃ¼rece Ã§alÄ±ÅŸÄ±r

    echo $meyveler[$i];
    echo "<br>";

    // SonlandÄ±ÄŸÄ±nda i'yi 1 arttÄ±r.
}
echo "<hr>";

echo "Meyveleri saymam bitti!<br>";

echo "Bir de tersine saymak istiyorum.<hr>";

// EriÅŸmek istediÄŸim sonuÃ§:
// echo $meyveler[3];
// echo $meyveler[2];
// echo $meyveler[1];
// echo $meyveler[0];

for ($i = 3; $i >= 0; $i--) {
    echo $meyveler[$i];
    echo "<br>";
}

echo "<hr>";

//  foreach
//  iterable (bu senaryoda array) deÄŸerlerin iÃ§indeki her bir eleman iÃ§in bir kere uygulanacak iÅŸlemleri yazabildiÄŸimiz dÃ¶ngÃ¼
//  Ã¶rneÄŸin yukarÄ±da $meyveler dizisindeki her bir elemanÄ± ekrana basabilmek iÃ§in for dÃ¶ngÃ¼sÃ¼ iÃ§inde sÄ±rasÄ±yla her bir indisin basÄ±lmasÄ±nÄ± saÄŸladÄ±k
//  bunun yerine $meyveler dizisi iÃ§indeki her bir elemanÄ±, sÄ±rayla bir referans deÄŸiÅŸkene atayarak Ã¼stÃ¼nde iÅŸlem yapmamÄ±zÄ± saÄŸlayan Ã§ok yakÄ±ÅŸÄ±klÄ± bir dÃ¶ngÃ¼ olarak foreach'i kullanacaÄŸÄ±z

$meyve = "ejder meyvesi";

echo $meyve;

echo "<hr>";

foreach ($meyveler as $meyve) {
    echo $meyve;
    echo "<br>";
}

echo "<hr>";

echo $meyve;

echo "<hr>";

//  foreach dÃ¶ngÃ¼sÃ¼nde yalnÄ±zca dizi elemanÄ±nÄ±n iÃ§eriÄŸini deÄŸil, istersen elemanÄ±n indisini de bir deÄŸiÅŸkene atayabiliriz

$ogrenci = ["ad" => "UÄŸur", "soyad" => "ArÄ±cÄ±", "no" => 455];

foreach ($ogrenci as $key => $value) {
    echo $key . ": " . $value;
    echo "<br>";
}


//  PHP'de tek bir ÅŸarta baÄŸlÄ± ve ÅŸart saÄŸlandÄ±ÄŸÄ± sÃ¼rece sÃ¼rdÃ¼rÃ¼lecek bir dÃ¶ngÃ¼ tanÄ±mlamak da mÃ¼mkÃ¼ndÃ¼r
//  while dÃ¶ngÃ¼sÃ¼ tek parametre alÄ±r ve true dÃ¶ndÃ¼ÄŸÃ¼ sÃ¼rece tekrar etmeye devam eder

while (true) {
    echo "Sonsuz dÃ¶ngÃ¼ ğŸ˜± <br>";

    if (rand(1, 6) == 4) break;
}

//  herhangi bir dÃ¶ngÃ¼nÃ¼n iÃ§inde artÄ±k dÃ¶ngÃ¼nÃ¼n tamamen durmasÄ±nÄ±, sonraki tekrarÄ± da yapmamasÄ±nÄ± istiyorsak break komutunu kullanabiliriz.

echo "<hr>";


//  eÄŸer bir dÃ¶ngÃ¼nÃ¼n kodunun en az 1 kere Ã§alÄ±ÅŸmasÄ±nÄ± ve bir ÅŸart saÄŸlandÄ±ÄŸÄ± sÃ¼rece de tekrar etmesini istiyorsak do while dÃ¶ngÃ¼sÃ¼nÃ¼ kullanabiliriz

$denemeSayisi = 0;

do {
    $zar = rand(1, 6);
    $denemeSayisi++;
} while ($zar !== 3);

echo $denemeSayisi . " kere denedikten sonra zar 3 geldi";
